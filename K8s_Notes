==============================
Step-1 : Install Metrics API
==============================
 
1) clone git repo
$ git clone https://github.com/ashokitschool/k8s_metrics_server
 
2) check the cloned repo
 
$ cd k8s_metrics_server
 
$ ls deploy/1.8+/
 
3)  apply manifest files from manifest-server directlry
 
$ kubectl apply -f deploy/1.8+/
 
Note: it will create service account, role, role binding all the stuff
 
# we can see metric server running in kube-system ns
$ kubectl get all -n kube-system
 
# check the top nodes using metric server
$ kubectl top nodes
 
# check the top pods using metric server
$ kubectl top pods
 
 
Note: When we install Metric Server, it is installed under the kube-system namespaces.
 
===================================
Step-2 : Deploy Sample Application
===================================
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hpa-demo-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      run: hpa-demo-deployment
  template:
    metadata:
      labels:
        run: hpa-demo-deployment
    spec:
      containers:
        - name: hpa-demo-deployment
          image: k8s.gcr.io/hpa-example
          ports:
            - containerPort: 80
          resources:
            limits:
              cpu: 500m
            requests:
              cpu: 200m
...

===================================
Step-3 : Create Service
===================================

---
apiVersion: v1
kind: Service
metadata:
  name: hpa-demo-deployment
  labels:
    run: hpa-demo-deployment
spec:
  ports:
    - port: 80
  selector:
    run: hpa-demo-deployment
...

===================================
Step-4 : Create HPA
===================================
--
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-demo-deployment
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hpa-demo-deployment
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 50
...

